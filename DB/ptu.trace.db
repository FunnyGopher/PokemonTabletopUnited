05-02 23:15:03 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "CONTEST_EFFECT" already exists; SQL statement:
CREATE TABLE CONTEST_EFFECT (
  ID INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
  NAME VARCHAR(50) NOT NULL,
  ROLL VARCHAR(3) NOT NULL,
  EFFECT VARCHAR(250) NOT NULL
) [42101-185]
05-02 23:32:55 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "CREATE TABLE NATURE (
  ID INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
  NAME VARCHAR(15) NOT NULL,
  STAT_RAISED_ID INT FOREIGN[*] KEY REFERENCES STAT(ID) NOT NULL,
  STAT_LOWERED_ID INT FOREIGN KEY REFERENCES STAT(ID) NOT NULL
)"; expected "(, FOR, UNSIGNED, NOT, NULL, AS, DEFAULT, GENERATED, NOT, NULL, AUTO_INCREMENT, BIGSERIAL, SERIAL, IDENTITY, NULL_TO_DEFAULT, SEQUENCE, SELECTIVITY, COMMENT, CONSTRAINT, PRIMARY, UNIQUE, NOT, NULL, CHECK, REFERENCES, ,, )"; SQL statement:
CREATE TABLE NATURE (
  ID INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
  NAME VARCHAR(15) NOT NULL,
  STAT_RAISED_ID INT FOREIGN KEY REFERENCES STAT(ID) NOT NULL,
  STAT_LOWERED_ID INT FOREIGN KEY REFERENCES STAT(ID) NOT NULL
) [42001-185]
05-02 23:38:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "STAT" not found; SQL statement:
CREATE TABLE NATURE (
  ID INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
  NAME VARCHAR(15) NOT NULL,
  STAT_RAISED_ID INT NOT NULL,
  STAT_LOWERED_ID INT NOT NULL,
  FOREIGN KEY (STAT_RAISED_ID) REFERENCES STAT(ID),
  FOREIGN KEY (STAT_LOWERED_ID) REFERENCES STAT(ID)
) [42102-185]
05-02 23:49:56 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "STAT" not found; SQL statement:
CREATE TABLE NATURE (
  ID INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
  NAME VARCHAR(15) NOT NULL,
  STAT_RAISED_ID INT NOT NULL,
  STAT_LOWERED_ID INT NOT NULL,
  FOREIGN KEY (STAT_RAISED_ID) REFERENCES STAT(ID),
  FOREIGN KEY (STAT_LOWERED_ID) REFERENCES STAT(ID)
) [42102-185]
05-03 00:17:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "BALL" already exists; SQL statement:
CREATE TABLE BALL (
  ID INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
  NAME VARCHAR(15) NOT NULL,
  IMAGE BLOB NOT NULL,
  MODIFIER INT NOT NULL,
  EFFECT VARCHAR(100) NOT NULL,
  COST INT NOT NULL
) [42101-185]
05-03 00:18:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "BALL" already exists; SQL statement:
CREATE TABLE BALL (
  ID INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
  NAME VARCHAR(15) NOT NULL,
  IMAGE BLOB NOT NULL,
  MODIFIER INT NOT NULL,
  EFFECT VARCHAR(100) NOT NULL,
  COST INT NOT NULL
) [42101-185]
05-03 00:26:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "CREATE TABLE ABILITY (
  ID INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
  NAME VARCHAR(50) NOT NULL,
  FREQUENCY VARCHAR(30) NOT NULL,
  ACTION_ID INT FOREIGN[*] KEY REFERENCES ACTION(ID),
  TRIGGER VARCHAR(250) NOT NULL,
  EFFECT VARCHAR(1000) NOT NULL
)"; expected "(, FOR, UNSIGNED, NOT, NULL, AS, DEFAULT, GENERATED, NOT, NULL, AUTO_INCREMENT, BIGSERIAL, SERIAL, IDENTITY, NULL_TO_DEFAULT, SEQUENCE, SELECTIVITY, COMMENT, CONSTRAINT, PRIMARY, UNIQUE, NOT, NULL, CHECK, REFERENCES, ,, )"; SQL statement:
CREATE TABLE ABILITY (
  ID INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
  NAME VARCHAR(50) NOT NULL,
  FREQUENCY VARCHAR(30) NOT NULL,
  ACTION_ID INT FOREIGN KEY REFERENCES ACTION(ID),
  TRIGGER VARCHAR(250) NOT NULL,
  EFFECT VARCHAR(1000) NOT NULL
) [42001-185]
05-03 00:27:36 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "ACTION" already exists; SQL statement:
CREATE TABLE ACTION (
  ID INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
  NAME VARCHAR(20) NOT NULL,
  DESCRIPTION VARCHAR(1000)
) [42101-185]
05-03 00:48:19 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "BALL" already exists; SQL statement:
CREATE TABLE BALL (
  ID INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
  NAME VARCHAR(15) NOT NULL,
  IMAGE BLOB NOT NULL,
  MODIFIER INT NOT NULL,
  EFFECT VARCHAR(100) NOT NULL,
  COST INT NOT NULL
) [42101-185]
05-03 00:50:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "CREATE TABLE SPECIES (
  ID INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
  NAME VARCHAR(30) NOT NULL,
  IMAGE BLOB NOT NULL,
  HP INT NOT NULL,
  ATTACK INT NOT NULL,
  DEFENSE INT NOT NULL,
  SPECIAL_ATTACK INT NOT NULL,
  SPECIAL_DEFENSE INT NOT NULL,
  SPEED INT NOT NULL,
  TYPE1_ID INT NOT NULL,
  TYPE2_ID INT,
  HEIGHT_FEET FLOAT NOT NULL,
  HEIGHT_METERS FLOAT NOT NULL,
  SIZE_ID INT NOT NULL,
  WEIGHT_LBS FLOAT NOT NULL,
  WEIGHT_KGS FLOAT NOT NULL,
  WEIGHT_CLASS_ID INT NOT NULL,
  MALE_GENDER_RATIO FLOAT NOT NULL,
  FEMALE_GENDER_RATIO FLOAT NOT NULL,
  EGG_GROUP_ID INT NOT NULL,
  EGG_IMAGE BLOB NOT NULL,
  AVERAGE_HATCH_RATE INT NOT NULL,
  DIET_ID INT NOT NULL,
  OVERLAND INT NOT NULL,
  SWIM INT NOT NULL
  LEVITATE[*] INT NOT NULL,
  VERTICAL_JUMP INT NOT NULL,
  HORIZONTAL_JUMP INT NOT NULL,
  POWER INT NOT NULL,
  FOREIGN KEY (TYPE1_ID) REFERENCES TYPE(ID),
  FOREIGN KEY (TYPE2_ID) REFERENCES TYPE(ID),
  FOREIGN KEY (SIZE_ID) REFERENCES SIZE(ID),
  FOREIGN KEY (WEIGHT_CLASS_ID) REFERENCES WEIGHT_CLASS(ID),
  FOREIGN KEY (EGG_GROUP_ID) REFERENCES EGG_GROUP(ID),
  FOREIGN KEY (DIET_ID) REFERENCES DIET(ID)
)"; expected "AS, DEFAULT, GENERATED, NOT, NULL, AUTO_INCREMENT, BIGSERIAL, SERIAL, IDENTITY, NULL_TO_DEFAULT, SEQUENCE, SELECTIVITY, COMMENT, CONSTRAINT, PRIMARY, UNIQUE, NOT, NULL, CHECK, REFERENCES, ,, )"; SQL statement:
CREATE TABLE SPECIES (
  ID INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
  NAME VARCHAR(30) NOT NULL,
  IMAGE BLOB NOT NULL,
  HP INT NOT NULL,
  ATTACK INT NOT NULL,
  DEFENSE INT NOT NULL,
  SPECIAL_ATTACK INT NOT NULL,
  SPECIAL_DEFENSE INT NOT NULL,
  SPEED INT NOT NULL,
  TYPE1_ID INT NOT NULL,
  TYPE2_ID INT,
  HEIGHT_FEET FLOAT NOT NULL,
  HEIGHT_METERS FLOAT NOT NULL,
  SIZE_ID INT NOT NULL,
  WEIGHT_LBS FLOAT NOT NULL,
  WEIGHT_KGS FLOAT NOT NULL,
  WEIGHT_CLASS_ID INT NOT NULL,
  MALE_GENDER_RATIO FLOAT NOT NULL,
  FEMALE_GENDER_RATIO FLOAT NOT NULL,
  EGG_GROUP_ID INT NOT NULL,
  EGG_IMAGE BLOB NOT NULL,
  AVERAGE_HATCH_RATE INT NOT NULL,
  DIET_ID INT NOT NULL,
  OVERLAND INT NOT NULL,
  SWIM INT NOT NULL
  LEVITATE INT NOT NULL,
  VERTICAL_JUMP INT NOT NULL,
  HORIZONTAL_JUMP INT NOT NULL,
  POWER INT NOT NULL,
  FOREIGN KEY (TYPE1_ID) REFERENCES TYPE(ID),
  FOREIGN KEY (TYPE2_ID) REFERENCES TYPE(ID),
  FOREIGN KEY (SIZE_ID) REFERENCES SIZE(ID),
  FOREIGN KEY (WEIGHT_CLASS_ID) REFERENCES WEIGHT_CLASS(ID),
  FOREIGN KEY (EGG_GROUP_ID) REFERENCES EGG_GROUP(ID),
  FOREIGN KEY (DIET_ID) REFERENCES DIET(ID)
) [42001-185]
05-03 01:46:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "SPECIES_EGG_MOVE_LIST" already exists; SQL statement:
CREATE TABLE SPECIES_EGG_MOVE_LIST (
  ID INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
  SPECIES_ID INT NOT NULL,
  LEVEL INT NOT NULL,
  MOVE_ID INT NOT NULL,
  FOREIGN KEY (SPECIES_ID) REFERENCES SPECIES(ID),
  FOREIGN KEY (MOVE_ID) REFERENCES MOVE(ID)
) [42101-185]
05-03 02:28:29 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "APRICORN" not found; SQL statement:
CREATE TABLE APRICORN_BALL (
  ID INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
  APRICORN_ID INT NOT NULL,
  BALL_ID INT NOT NULL,
  FOREIGN KEY (APRICORN_ID) REFERENCES APRICORN(ID),
  FOREIGN KEY (BALL_ID) REFERENCES BALL(ID),
) [42102-185]
05-03 03:29:50 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column "TYPE_ID" not found; SQL statement:
CREATE TABLE WEAPON_MOVE(
  ID INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
  NAME VARCHAR(50) NOT NULL,
  FREQUENCY VARCHAR(30) NOT NULL,
  ACCUARACY_CHECK INT NOT NULL,
  DAMAGE_BASE_ID INT,
  MOVE_CLASS_ID INT NOT NULL,
  RANGE VARCHAR(50),
  EFFECT VARCHAR(1000) NOT NULL,
  LIMITATION VARCHAR(250),
  WEAPON_SUGGESTION VARCHAR(250),
  FOREIGN KEY (TYPE_ID) REFERENCES TYPE(ID),
  FOREIGN KEY (DAMAGE_BASE_ID) REFERENCES DAMAGE_BASE(ID),
  FOREIGN KEY (MOVE_CLASS_ID) REFERENCES MOVE_CLASS(ID),
) [42122-185]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.table.Table.getColumn(Table.java:648)
	at org.h2.table.IndexColumn.mapColumns(IndexColumn.java:74)
	at org.h2.command.ddl.AlterTableAddConstraint.tryUpdate(AlterTableAddConstraint.java:197)
	at org.h2.command.ddl.AlterTableAddConstraint.update(AlterTableAddConstraint.java:72)
	at org.h2.command.ddl.CreateTable.update(CreateTable.java:171)
	at org.h2.command.CommandContainer.update(CommandContainer.java:78)
	at org.h2.command.Command.executeUpdate(Command.java:254)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at com.intellij.database.remote.jdbc.impl.RemoteStatementImpl.execute(RemoteStatementImpl.java:61)
	at sun.reflect.GeneratedMethodAccessor24.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:323)
	at sun.rmi.transport.Transport$1.run(Transport.java:200)
	at sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$254(TCPTransport.java:683)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$1/1216127226.run(Unknown Source)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
05-03 03:29:57 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column "TYPE_ID" not found; SQL statement:
CREATE TABLE WEAPON_MOVE(
  ID INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
  NAME VARCHAR(50) NOT NULL,
  FREQUENCY VARCHAR(30) NOT NULL,
  ACCUARACY_CHECK INT NOT NULL,
  DAMAGE_BASE_ID INT,
  MOVE_CLASS_ID INT NOT NULL,
  RANGE VARCHAR(50),
  EFFECT VARCHAR(1000) NOT NULL,
  LIMITATION VARCHAR(250),
  WEAPON_SUGGESTION VARCHAR(250),
  FOREIGN KEY (TYPE_ID) REFERENCES TYPE(ID),
  FOREIGN KEY (DAMAGE_BASE_ID) REFERENCES DAMAGE_BASE(ID),
  FOREIGN KEY (MOVE_CLASS_ID) REFERENCES MOVE_CLASS(ID)
) [42122-185]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.table.Table.getColumn(Table.java:648)
	at org.h2.table.IndexColumn.mapColumns(IndexColumn.java:74)
	at org.h2.command.ddl.AlterTableAddConstraint.tryUpdate(AlterTableAddConstraint.java:197)
	at org.h2.command.ddl.AlterTableAddConstraint.update(AlterTableAddConstraint.java:72)
	at org.h2.command.ddl.CreateTable.update(CreateTable.java:171)
	at org.h2.command.CommandContainer.update(CommandContainer.java:78)
	at org.h2.command.Command.executeUpdate(Command.java:254)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at com.intellij.database.remote.jdbc.impl.RemoteStatementImpl.execute(RemoteStatementImpl.java:61)
	at sun.reflect.GeneratedMethodAccessor24.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:323)
	at sun.rmi.transport.Transport$1.run(Transport.java:200)
	at sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$254(TCPTransport.java:683)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$1/1216127226.run(Unknown Source)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
05-04 18:27:26 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Constraint "POWER_ID" not found; SQL statement:
ALTER TABLE SPECIES
DROP FOREIGN KEY POWER_ID [90057-185]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.AlterTableDropConstraint.update(AlterTableDropConstraint.java:41)
	at org.h2.command.CommandContainer.update(CommandContainer.java:78)
	at org.h2.command.Command.executeUpdate(Command.java:254)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at com.intellij.database.remote.jdbc.impl.RemoteStatementImpl.execute(RemoteStatementImpl.java:61)
	at sun.reflect.GeneratedMethodAccessor56.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:323)
	at sun.rmi.transport.Transport$1.run(Transport.java:200)
	at sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$254(TCPTransport.java:683)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$1/180228674.run(Unknown Source)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
05-16 00:57:58 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "CREATE TABLE EQUIPMENT_SLOT (
  ID INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
  NAME VARCHAR(50) INT[*] NOT NULL
)"; expected "FOR, UNSIGNED, NOT, NULL, AS, DEFAULT, GENERATED, NOT, NULL, AUTO_INCREMENT, BIGSERIAL, SERIAL, IDENTITY, NULL_TO_DEFAULT, SEQUENCE, SELECTIVITY, COMMENT, CONSTRAINT, PRIMARY, UNIQUE, NOT, NULL, CHECK, REFERENCES, ,, )"; SQL statement:
CREATE TABLE EQUIPMENT_SLOT (
  ID INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
  NAME VARCHAR(50) INT NOT NULL
) [42001-185]
05-16 22:57:11 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO POWER(VALUE, HEAVY_LIFTING_LIMIT, STARGGERING_WEIGHT_LIMIT, DRAG_WEIGHT_LIMIT)
VALUES (1,,[*],)"; expected "), DEFAULT, NOT, EXISTS, INTERSECTS, SELECT, FROM"; SQL statement:
INSERT INTO POWER(VALUE, HEAVY_LIFTING_LIMIT, STARGGERING_WEIGHT_LIMIT, DRAG_WEIGHT_LIMIT)
VALUES (1,,,) [42001-185]
05-17 00:05:44 jdbc[6]: exception
org.h2.jdbc.JdbcSQLException: Value too long for column "DESCRIPTION VARCHAR(30) NOT NULL": "'Feed on leafy food, vegetables, nuts and fruits to survive.' (59)"; SQL statement:

INSERT INTO DIET(NAME, DESCRIPTION)
    VALUES ('Herbivore', 'Feed on leafy food, vegetables, nuts and fruits to survive.');
INSERT INTO DIET(NAME, DESCRIPTION)
    VALUES ('Omnivores', 'Can eat plants and other Pokémon.');
INSERT INTO DIET(NAME, DESCRIPTION)
    VALUES ('Phototroph','Photosynthesize their own food and energy.');
INSERT INTO DIET(NAME, DESCRIPTION)
    VALUES ('Terravore','One who feeds on the minerals found in rock and dirt around them.');
INSERT INTO DIET(NAME, DESCRIPTION)
    VALUES ('Nullivore','Does not need to eat anything to sustain itself for various reasons.');
INSERT INTO DIET(NAME, DESCRIPTION)
    VALUES ('Ergovore','Lives by consuming pure energy.');
INSERT INTO DIET(NAME, DESCRIPTION)
    VALUES ('Filter Feeder', 'Feed by straining suspended matter and food particles from water, typically by passing the water over a specialized filtering structure.');
 [22001-185]
05-17 00:07:18 jdbc[6]: exception
org.h2.jdbc.JdbcSQLException: Value too long for column "DESCRIPTION VARCHAR(30) NOT NULL": "'Feed on leafy food, vegetables, nuts and fruits.' (48)"; SQL statement:
INSERT INTO DIET(NAME, DESCRIPTION)
    VALUES ('Herbivore', 'Feed on leafy food, vegetables, nuts and fruits.');
INSERT INTO DIET(NAME, DESCRIPTION)
    VALUES ('Omnivores', 'Can eat plants and other Pokémon.');
INSERT INTO DIET(NAME, DESCRIPTION)
    VALUES ('Phototroph','Photosynthesize their own food and energy.');
INSERT INTO DIET(NAME, DESCRIPTION)
    VALUES ('Terravore','One who feeds on the minerals found in rock and dirt around them.');
INSERT INTO DIET(NAME, DESCRIPTION)
    VALUES ('Nullivore','Does not need to eat anything to sustain itself for various reasons.');
INSERT INTO DIET(NAME, DESCRIPTION)
    VALUES ('Ergovore','Lives by consuming pure energy.');
INSERT INTO DIET(NAME, DESCRIPTION)
    VALUES ('Filter Feeder', 'Feed by straining suspended matter and food particles from water'); [22001-185]
05-17 13:47:54 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO POKEMON_LEVEL(LEVEL, EXPERIENCE_NEEDED)
VALUES (,[*])"; expected "), DEFAULT, NOT, EXISTS, INTERSECTS, SELECT, FROM"; SQL statement:
INSERT INTO POKEMON_LEVEL(LEVEL, EXPERIENCE_NEEDED)
VALUES (,) [42001-185]
05-17 14:11:37 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO POKEMON_LEVEL(LEVEL, EXPERIENCE_NEEDED)
VALUES (,[*])"; expected "), DEFAULT, NOT, EXISTS, INTERSECTS, SELECT, FROM"; SQL statement:
INSERT INTO POKEMON_LEVEL(LEVEL, EXPERIENCE_NEEDED)
VALUES (,) [42001-185]
05-18 17:19:11 jdbc[14]: exception
org.h2.jdbc.JdbcSQLException: Table "COMBAT_TYPE" not found; SQL statement:
INSERT INTO COMBAT_TYPE(NAME) VALUES ('Cool');
INSERT INTO COMBAT_TYPE(NAME) VALUES ('Beauty');
INSERT INTO COMBAT_TYPE(NAME) VALUES ('Cute');
INSERT INTO COMBAT_TYPE(NAME) VALUES ('Smart');
INSERT INTO COMBAT_TYPE(NAME) VALUES ('Tough'); [42102-185]
05-18 17:44:42 jdbc[55]: exception
org.h2.jdbc.JdbcSQLException: Column "MULTIPLAYER" not found; SQL statement:
SELECT t.* FROM PUBLIC.EFFECTIVENESS t ORDER BY MULTIPLAYER ASC [42122-185]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:147)
	at org.h2.command.dml.Select.prepare(Select.java:834)
	at org.h2.command.Parser.prepareCommand(Parser.java:247)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1189)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:170)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at com.intellij.database.remote.jdbc.impl.RemoteStatementImpl.execute(RemoteStatementImpl.java:61)
	at sun.reflect.GeneratedMethodAccessor29.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:323)
	at sun.rmi.transport.Transport$1.run(Transport.java:200)
	at sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$254(TCPTransport.java:683)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$2/365683284.run(Unknown Source)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
05-18 18:11:11 jdbc[14]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "
INSERT INTO TYPE_EFFECTIVENESS(TYPE_ATTACKING_ID, TYPE_DEFENDING_ID, EFFECTIVENESS_ID)
VALUES (SELECT ID FROM TYPE WHERE NAME = 'Grass', SELECT ID FROM TYPE WHERE NAME = 'Grass', 32;[*]
INSERT INTO TYPE_EFFECTIVENESS(TYPE_ATTACKING_ID, TYPE_DEFENDING_ID, EFFECTIVENESS_ID)
VALUES (SELECT ID FROM TYPE WHERE NAME = 'Grass', SELECT ID FROM TYPE WHERE NAME = 'Ice', 3);
INSERT INTO TYPE_EFFECTIVENESS(TYPE_ATTACKING_ID, TYPE_DEFENDING_ID, EFFECTIVENESS_ID)
VALUES (SELECT ID FROM TYPE WHERE NAME = 'Grass', SELECT ID FROM TYPE WHERE NAME = 'Fighting', 3);
INSERT INTO TYPE_EFFECTIVENESS(TYPE_ATTACKING_ID, TYPE_DEFENDING_ID, EFFECTIVENESS_ID)
VALUES (SELECT ID FROM TYPE WHERE NAME = 'Grass', SELECT ID FROM TYPE WHERE NAME = 'Poison', 2);
INSERT INTO TYPE_EFFECTIVENESS(TYPE_ATTACKING_ID, TYPE_DEFENDING_ID, EFFECTIVENESS_ID)
VALUES (SELECT ID FROM TYPE WHERE NAME = 'Grass', SELECT ID FROM TYPE WHERE NAME = 'Ground', 4);
INSERT INTO TYPE_EFFECTIVENESS(TYPE_ATTACKING_ID, TYPE_DEFENDING_ID, EFFECTIVENESS_ID)
VALUES (SELECT ID FROM TYPE WHERE NAME = 'Grass', SELECT ID FROM TYPE WHERE NAME = 'Flying', 2);
INSERT INTO TYPE_EFFECTIVENESS(TYPE_ATTACKING_ID, TYPE_DEFENDING_ID, EFFECTIVENESS_ID)
VALUES (SELECT ID FROM TYPE WHERE NAME = 'Grass', SELECT ID FROM TYPE WHERE NAME = 'Psychic', 3);
INSERT INTO TYPE_EFFECTIVENESS(TYPE_ATTACKING_ID, TYPE_DEFENDING_ID, EFFECTIVENESS_ID)
VALUES (SELECT ID FROM TYPE WHERE NAME = 'Grass', SELECT ID FROM TYPE WHERE NAME = 'Bug', 2);
INSERT INTO TYPE_EFFECTIVENESS(TYPE_ATTACKING_ID, TYPE_DEFENDING_ID, EFFECTIVENESS_ID)
VALUES (SELECT ID FROM TYPE WHERE NAME = 'Grass', SELECT ID FROM TYPE WHERE NAME = 'Rock', 4);
INSERT INTO TYPE_EFFECTIVENESS(TYPE_ATTACKING_ID, TYPE_DEFENDING_ID, EFFECTIVENESS_ID)
VALUES (SELECT ID FROM TYPE WHERE NAME = 'Grass', SELECT ID FROM TYPE WHERE NAME = 'Ghost', 3);
INSERT INTO TYPE_EFFECTIVENESS(TYPE_ATTACKING_ID, TYPE_DEFENDING_ID, EFFECTIVENESS_ID)
VALUES (SELECT ID FROM TYPE WHERE NAME = 'Grass', SELECT ID FROM TYPE WHERE NAME = 'Dragon', 2);
INSERT INTO TYPE_EFFECTIVENESS(TYPE_ATTACKING_ID, TYPE_DEFENDING_ID, EFFECTIVENESS_ID)
VALUES (SELECT ID FROM TYPE WHERE NAME = 'Grass', SELECT ID FROM TYPE WHERE NAME = 'Dark', 3);
INSERT INTO TYPE_EFFECTIVENESS(TYPE_ATTACKING_ID, TYPE_DEFENDING_ID, EFFECTIVENESS_ID)
VALUES (SELECT ID FROM TYPE WHERE NAME = 'Grass', SELECT ID FROM TYPE WHERE NAME = 'Steel', 2);
INSERT INTO TYPE_EFFECTIVENESS(TYPE_ATTACKING_ID, TYPE_DEFENDING_ID, EFFECTIVENESS_ID)
VALUES (SELECT ID FROM TYPE WHERE NAME = 'Grass', SELECT ID FROM TYPE WHERE NAME = 'Fairy', 3);"; expected "[, ::, *, /, %, +, -, ||, ~, !~, NOT, LIKE, REGEXP, IS, IN, BETWEEN, AND, OR, ,, )"; SQL statement:

INSERT INTO TYPE_EFFECTIVENESS(TYPE_ATTACKING_ID, TYPE_DEFENDING_ID, EFFECTIVENESS_ID)
VALUES (SELECT ID FROM TYPE WHERE NAME = 'Grass', SELECT ID FROM TYPE WHERE NAME = 'Grass', 32;
INSERT INTO TYPE_EFFECTIVENESS(TYPE_ATTACKING_ID, TYPE_DEFENDING_ID, EFFECTIVENESS_ID)
VALUES (SELECT ID FROM TYPE WHERE NAME = 'Grass', SELECT ID FROM TYPE WHERE NAME = 'Ice', 3);
INSERT INTO TYPE_EFFECTIVENESS(TYPE_ATTACKING_ID, TYPE_DEFENDING_ID, EFFECTIVENESS_ID)
VALUES (SELECT ID FROM TYPE WHERE NAME = 'Grass', SELECT ID FROM TYPE WHERE NAME = 'Fighting', 3);
INSERT INTO TYPE_EFFECTIVENESS(TYPE_ATTACKING_ID, TYPE_DEFENDING_ID, EFFECTIVENESS_ID)
VALUES (SELECT ID FROM TYPE WHERE NAME = 'Grass', SELECT ID FROM TYPE WHERE NAME = 'Poison', 2);
INSERT INTO TYPE_EFFECTIVENESS(TYPE_ATTACKING_ID, TYPE_DEFENDING_ID, EFFECTIVENESS_ID)
VALUES (SELECT ID FROM TYPE WHERE NAME = 'Grass', SELECT ID FROM TYPE WHERE NAME = 'Ground', 4);
INSERT INTO TYPE_EFFECTIVENESS(TYPE_ATTACKING_ID, TYPE_DEFENDING_ID, EFFECTIVENESS_ID)
VALUES (SELECT ID FROM TYPE WHERE NAME = 'Grass', SELECT ID FROM TYPE WHERE NAME = 'Flying', 2);
INSERT INTO TYPE_EFFECTIVENESS(TYPE_ATTACKING_ID, TYPE_DEFENDING_ID, EFFECTIVENESS_ID)
VALUES (SELECT ID FROM TYPE WHERE NAME = 'Grass', SELECT ID FROM TYPE WHERE NAME = 'Psychic', 3);
INSERT INTO TYPE_EFFECTIVENESS(TYPE_ATTACKING_ID, TYPE_DEFENDING_ID, EFFECTIVENESS_ID)
VALUES (SELECT ID FROM TYPE WHERE NAME = 'Grass', SELECT ID FROM TYPE WHERE NAME = 'Bug', 2);
INSERT INTO TYPE_EFFECTIVENESS(TYPE_ATTACKING_ID, TYPE_DEFENDING_ID, EFFECTIVENESS_ID)
VALUES (SELECT ID FROM TYPE WHERE NAME = 'Grass', SELECT ID FROM TYPE WHERE NAME = 'Rock', 4);
INSERT INTO TYPE_EFFECTIVENESS(TYPE_ATTACKING_ID, TYPE_DEFENDING_ID, EFFECTIVENESS_ID)
VALUES (SELECT ID FROM TYPE WHERE NAME = 'Grass', SELECT ID FROM TYPE WHERE NAME = 'Ghost', 3);
INSERT INTO TYPE_EFFECTIVENESS(TYPE_ATTACKING_ID, TYPE_DEFENDING_ID, EFFECTIVENESS_ID)
VALUES (SELECT ID FROM TYPE WHERE NAME = 'Grass', SELECT ID FROM TYPE WHERE NAME = 'Dragon', 2);
INSERT INTO TYPE_EFFECTIVENESS(TYPE_ATTACKING_ID, TYPE_DEFENDING_ID, EFFECTIVENESS_ID)
VALUES (SELECT ID FROM TYPE WHERE NAME = 'Grass', SELECT ID FROM TYPE WHERE NAME = 'Dark', 3);
INSERT INTO TYPE_EFFECTIVENESS(TYPE_ATTACKING_ID, TYPE_DEFENDING_ID, EFFECTIVENESS_ID)
VALUES (SELECT ID FROM TYPE WHERE NAME = 'Grass', SELECT ID FROM TYPE WHERE NAME = 'Steel', 2);
INSERT INTO TYPE_EFFECTIVENESS(TYPE_ATTACKING_ID, TYPE_DEFENDING_ID, EFFECTIVENESS_ID)
VALUES (SELECT ID FROM TYPE WHERE NAME = 'Grass', SELECT ID FROM TYPE WHERE NAME = 'Fairy', 3); [42001-185]
05-18 18:12:59 jdbc[14]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "
INSERT INTO TYPE_EFFECTIVENESS(TYPE_ATTACKING_ID, TYPE_DEFENDING_ID, EFFECTIVENESS_ID)
VALUES (SELECT ID FROM TYPE WHERE NAME = 'Grass', SELECT ID FROM TYPE WHERE NAME = 'Grass', 2;[*]
INSERT INTO TYPE_EFFECTIVENESS(TYPE_ATTACKING_ID, TYPE_DEFENDING_ID, EFFECTIVENESS_ID)
VALUES (SELECT ID FROM TYPE WHERE NAME = 'Grass', SELECT ID FROM TYPE WHERE NAME = 'Ice', 3);
INSERT INTO TYPE_EFFECTIVENESS(TYPE_ATTACKING_ID, TYPE_DEFENDING_ID, EFFECTIVENESS_ID)
VALUES (SELECT ID FROM TYPE WHERE NAME = 'Grass', SELECT ID FROM TYPE WHERE NAME = 'Fighting', 3);
INSERT INTO TYPE_EFFECTIVENESS(TYPE_ATTACKING_ID, TYPE_DEFENDING_ID, EFFECTIVENESS_ID)
VALUES (SELECT ID FROM TYPE WHERE NAME = 'Grass', SELECT ID FROM TYPE WHERE NAME = 'Poison', 2);
INSERT INTO TYPE_EFFECTIVENESS(TYPE_ATTACKING_ID, TYPE_DEFENDING_ID, EFFECTIVENESS_ID)
VALUES (SELECT ID FROM TYPE WHERE NAME = 'Grass', SELECT ID FROM TYPE WHERE NAME = 'Ground', 4);
INSERT INTO TYPE_EFFECTIVENESS(TYPE_ATTACKING_ID, TYPE_DEFENDING_ID, EFFECTIVENESS_ID)
VALUES (SELECT ID FROM TYPE WHERE NAME = 'Grass', SELECT ID FROM TYPE WHERE NAME = 'Flying', 2);
INSERT INTO TYPE_EFFECTIVENESS(TYPE_ATTACKING_ID, TYPE_DEFENDING_ID, EFFECTIVENESS_ID)
VALUES (SELECT ID FROM TYPE WHERE NAME = 'Grass', SELECT ID FROM TYPE WHERE NAME = 'Psychic', 3);
INSERT INTO TYPE_EFFECTIVENESS(TYPE_ATTACKING_ID, TYPE_DEFENDING_ID, EFFECTIVENESS_ID)
VALUES (SELECT ID FROM TYPE WHERE NAME = 'Grass', SELECT ID FROM TYPE WHERE NAME = 'Bug', 2);
INSERT INTO TYPE_EFFECTIVENESS(TYPE_ATTACKING_ID, TYPE_DEFENDING_ID, EFFECTIVENESS_ID)
VALUES (SELECT ID FROM TYPE WHERE NAME = 'Grass', SELECT ID FROM TYPE WHERE NAME = 'Rock', 4);
INSERT INTO TYPE_EFFECTIVENESS(TYPE_ATTACKING_ID, TYPE_DEFENDING_ID, EFFECTIVENESS_ID)
VALUES (SELECT ID FROM TYPE WHERE NAME = 'Grass', SELECT ID FROM TYPE WHERE NAME = 'Ghost', 3);
INSERT INTO TYPE_EFFECTIVENESS(TYPE_ATTACKING_ID, TYPE_DEFENDING_ID, EFFECTIVENESS_ID)
VALUES (SELECT ID FROM TYPE WHERE NAME = 'Grass', SELECT ID FROM TYPE WHERE NAME = 'Dragon', 2);
INSERT INTO TYPE_EFFECTIVENESS(TYPE_ATTACKING_ID, TYPE_DEFENDING_ID, EFFECTIVENESS_ID)
VALUES (SELECT ID FROM TYPE WHERE NAME = 'Grass', SELECT ID FROM TYPE WHERE NAME = 'Dark', 3);
INSERT INTO TYPE_EFFECTIVENESS(TYPE_ATTACKING_ID, TYPE_DEFENDING_ID, EFFECTIVENESS_ID)
VALUES (SELECT ID FROM TYPE WHERE NAME = 'Grass', SELECT ID FROM TYPE WHERE NAME = 'Steel', 2);
INSERT INTO TYPE_EFFECTIVENESS(TYPE_ATTACKING_ID, TYPE_DEFENDING_ID, EFFECTIVENESS_ID)
VALUES (SELECT ID FROM TYPE WHERE NAME = 'Grass', SELECT ID FROM TYPE WHERE NAME = 'Fairy', 3);"; expected "[, ::, *, /, %, +, -, ||, ~, !~, NOT, LIKE, REGEXP, IS, IN, BETWEEN, AND, OR, ,, )"; SQL statement:

INSERT INTO TYPE_EFFECTIVENESS(TYPE_ATTACKING_ID, TYPE_DEFENDING_ID, EFFECTIVENESS_ID)
VALUES (SELECT ID FROM TYPE WHERE NAME = 'Grass', SELECT ID FROM TYPE WHERE NAME = 'Grass', 2;
INSERT INTO TYPE_EFFECTIVENESS(TYPE_ATTACKING_ID, TYPE_DEFENDING_ID, EFFECTIVENESS_ID)
VALUES (SELECT ID FROM TYPE WHERE NAME = 'Grass', SELECT ID FROM TYPE WHERE NAME = 'Ice', 3);
INSERT INTO TYPE_EFFECTIVENESS(TYPE_ATTACKING_ID, TYPE_DEFENDING_ID, EFFECTIVENESS_ID)
VALUES (SELECT ID FROM TYPE WHERE NAME = 'Grass', SELECT ID FROM TYPE WHERE NAME = 'Fighting', 3);
INSERT INTO TYPE_EFFECTIVENESS(TYPE_ATTACKING_ID, TYPE_DEFENDING_ID, EFFECTIVENESS_ID)
VALUES (SELECT ID FROM TYPE WHERE NAME = 'Grass', SELECT ID FROM TYPE WHERE NAME = 'Poison', 2);
INSERT INTO TYPE_EFFECTIVENESS(TYPE_ATTACKING_ID, TYPE_DEFENDING_ID, EFFECTIVENESS_ID)
VALUES (SELECT ID FROM TYPE WHERE NAME = 'Grass', SELECT ID FROM TYPE WHERE NAME = 'Ground', 4);
INSERT INTO TYPE_EFFECTIVENESS(TYPE_ATTACKING_ID, TYPE_DEFENDING_ID, EFFECTIVENESS_ID)
VALUES (SELECT ID FROM TYPE WHERE NAME = 'Grass', SELECT ID FROM TYPE WHERE NAME = 'Flying', 2);
INSERT INTO TYPE_EFFECTIVENESS(TYPE_ATTACKING_ID, TYPE_DEFENDING_ID, EFFECTIVENESS_ID)
VALUES (SELECT ID FROM TYPE WHERE NAME = 'Grass', SELECT ID FROM TYPE WHERE NAME = 'Psychic', 3);
INSERT INTO TYPE_EFFECTIVENESS(TYPE_ATTACKING_ID, TYPE_DEFENDING_ID, EFFECTIVENESS_ID)
VALUES (SELECT ID FROM TYPE WHERE NAME = 'Grass', SELECT ID FROM TYPE WHERE NAME = 'Bug', 2);
INSERT INTO TYPE_EFFECTIVENESS(TYPE_ATTACKING_ID, TYPE_DEFENDING_ID, EFFECTIVENESS_ID)
VALUES (SELECT ID FROM TYPE WHERE NAME = 'Grass', SELECT ID FROM TYPE WHERE NAME = 'Rock', 4);
INSERT INTO TYPE_EFFECTIVENESS(TYPE_ATTACKING_ID, TYPE_DEFENDING_ID, EFFECTIVENESS_ID)
VALUES (SELECT ID FROM TYPE WHERE NAME = 'Grass', SELECT ID FROM TYPE WHERE NAME = 'Ghost', 3);
INSERT INTO TYPE_EFFECTIVENESS(TYPE_ATTACKING_ID, TYPE_DEFENDING_ID, EFFECTIVENESS_ID)
VALUES (SELECT ID FROM TYPE WHERE NAME = 'Grass', SELECT ID FROM TYPE WHERE NAME = 'Dragon', 2);
INSERT INTO TYPE_EFFECTIVENESS(TYPE_ATTACKING_ID, TYPE_DEFENDING_ID, EFFECTIVENESS_ID)
VALUES (SELECT ID FROM TYPE WHERE NAME = 'Grass', SELECT ID FROM TYPE WHERE NAME = 'Dark', 3);
INSERT INTO TYPE_EFFECTIVENESS(TYPE_ATTACKING_ID, TYPE_DEFENDING_ID, EFFECTIVENESS_ID)
VALUES (SELECT ID FROM TYPE WHERE NAME = 'Grass', SELECT ID FROM TYPE WHERE NAME = 'Steel', 2);
INSERT INTO TYPE_EFFECTIVENESS(TYPE_ATTACKING_ID, TYPE_DEFENDING_ID, EFFECTIVENESS_ID)
VALUES (SELECT ID FROM TYPE WHERE NAME = 'Grass', SELECT ID FROM TYPE WHERE NAME = 'Fairy', 3); [42001-185]
05-18 19:11:36 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Value too long for column "DESCRIPTION VARCHAR(250) NOT NULL": "STRINGDECODE('Pok\u00e9mon detest their trainers, and defy them at every opportunity. You must make a DC 20 Command Check to giv... (1506)"; SQL statement:
INSERT INTO LOYALTY(LOYALTY, DESCRIPTION) VALUES (0, 'Pokémon detest their trainers, and defy them at every opportunity. You must make a DC 20 Command Check to give commands to Pokémon with 0 Loyalty. If you fail, the Pokémon may loaf about doing nothing, or may use whichever Move or Attack it pleases on whichever target it pleases – including its Trainer or other helpless bystanders!
These Pokémon are usually the product of chronic and brutal mistreatment, such as Pokémon kept by a Lasher that are never allowed to fully recover from the Injuries inflicted by their brutal training or the application of Features like Strike of the Whip. It usually takes a special effort to lower a Pokémon down to this Loyalty Rank.
However, it’s not unheard of for Pokémon to be caught at this Loyalty Rank as well. As an extreme example, a Trainer who crushed a mother Pokémon’s nest of eggs and then proceeded to capture her would rightfully earn the ire of that Pokémon!
In a more benign case, an especially powerful and feral Pokémon that was caught by a stroke of luck could begin at Loyalty 0 or even require a higher Command Check than 20 to order in battle at first. The Trainer would have to prove their worth in order to overcome this obstacle.
The typical behavior of Loyalty 0 Pokémon can vary widely, from near-paralyzing fear of their Trainer to incredibly active defiance. Either way, it is usually not a good idea to leave them unattended or even have them released and unrestrained in public, as they may be wont to run away or even attack bystanders.') [22001-185]
05-18 19:11:41 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Value too long for column "DESCRIPTION VARCHAR(250) NOT NULL": "STRINGDECODE('Pok\u00e9mon detest their trainers, and defy them at every opportunity. You must make a DC 20 Command Check to giv... (1506)"; SQL statement:
INSERT INTO LOYALTY(LOYALTY, DESCRIPTION) VALUES (0, 'Pokémon detest their trainers, and defy them at every opportunity. You must make a DC 20 Command Check to give commands to Pokémon with 0 Loyalty. If you fail, the Pokémon may loaf about doing nothing, or may use whichever Move or Attack it pleases on whichever target it pleases – including its Trainer or other helpless bystanders!
These Pokémon are usually the product of chronic and brutal mistreatment, such as Pokémon kept by a Lasher that are never allowed to fully recover from the Injuries inflicted by their brutal training or the application of Features like Strike of the Whip. It usually takes a special effort to lower a Pokémon down to this Loyalty Rank.
However, it’s not unheard of for Pokémon to be caught at this Loyalty Rank as well. As an extreme example, a Trainer who crushed a mother Pokémon’s nest of eggs and then proceeded to capture her would rightfully earn the ire of that Pokémon!
In a more benign case, an especially powerful and feral Pokémon that was caught by a stroke of luck could begin at Loyalty 0 or even require a higher Command Check than 20 to order in battle at first. The Trainer would have to prove their worth in order to overcome this obstacle.
The typical behavior of Loyalty 0 Pokémon can vary widely, from near-paralyzing fear of their Trainer to incredibly active defiance. Either way, it is usually not a good idea to leave them unattended or even have them released and unrestrained in public, as they may be wont to run away or even attack bystanders.') [22001-185]
05-18 19:13:15 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Value too long for column "DESCRIPTION VARCHAR(1000) NOT NULL": "STRINGDECODE('Pok\u00e9mon detest their trainers, and defy them at every opportunity. You must make a DC 20 Command Check to giv... (1506)"; SQL statement:
INSERT INTO LOYALTY(LOYALTY, DESCRIPTION) VALUES (0, 'Pokémon detest their trainers, and defy them at every opportunity. You must make a DC 20 Command Check to give commands to Pokémon with 0 Loyalty. If you fail, the Pokémon may loaf about doing nothing, or may use whichever Move or Attack it pleases on whichever target it pleases – including its Trainer or other helpless bystanders!
These Pokémon are usually the product of chronic and brutal mistreatment, such as Pokémon kept by a Lasher that are never allowed to fully recover from the Injuries inflicted by their brutal training or the application of Features like Strike of the Whip. It usually takes a special effort to lower a Pokémon down to this Loyalty Rank.
However, it’s not unheard of for Pokémon to be caught at this Loyalty Rank as well. As an extreme example, a Trainer who crushed a mother Pokémon’s nest of eggs and then proceeded to capture her would rightfully earn the ire of that Pokémon!
In a more benign case, an especially powerful and feral Pokémon that was caught by a stroke of luck could begin at Loyalty 0 or even require a higher Command Check than 20 to order in battle at first. The Trainer would have to prove their worth in order to overcome this obstacle.
The typical behavior of Loyalty 0 Pokémon can vary widely, from near-paralyzing fear of their Trainer to incredibly active defiance. Either way, it is usually not a good idea to leave them unattended or even have them released and unrestrained in public, as they may be wont to run away or even attack bystanders.') [22001-185]
05-24 01:15:31 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Column count does not match; SQL statement:
INSERT INTO BALL(NAME, MODIFIER, EFFECT, COST)
VALUES ('Great', -10, 'A better Poké Ball with no special effects.') [21002-185]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.dml.Insert.prepare(Insert.java:265)
	at org.h2.command.Parser.prepareCommand(Parser.java:247)
	at org.h2.engine.Session.prepareLocal(Session.java:446)
	at org.h2.engine.Session.prepareCommand(Session.java:388)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1189)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:170)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at com.intellij.database.remote.jdbc.impl.RemoteStatementImpl.execute(RemoteStatementImpl.java:61)
	at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:323)
	at sun.rmi.transport.Transport$1.run(Transport.java:200)
	at sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$254(TCPTransport.java:683)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$2/640011814.run(Unknown Source)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
05-24 01:20:34 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Value too long for column "EFFECT VARCHAR(100) NOT NULL": "STRINGDECODE('-30 Modifier if the user has an active Pok\u00e9mon that is of the same evolutionary line as the target, and the o... (163)"; SQL statement:
INSERT INTO BALL(NAME, MODIFIER, EFFECT, COST)
VALUES ('Love', 0, '-30 Modifier if the user has an active Pokémon that is of the same evolutionary line as the target, and the opposite gender. Does not work with genderless Pokémon.', 800) [22001-185]
05-24 04:06:17 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: IO Exception: "java.io.FileNotFoundException: C:\Users\Jackkell\Desktop\Ball Images\Bag_Poké_Ball_Sprite (The system cannot find the file specified)"; "C:\Users\Jackkell\Desktop\Ball Images\Bag_Poké_Ball_Sprite"; SQL statement:
UPDATE BALL
SET NAME = 'Basic Ball', IMAGE = FILE_READ('C:\Users\Jackkell\Desktop\Ball Images\Bag_Poké_Ball_Sprite')
WHERE NAME= 'Basic' [90031-185]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:168)
	at org.h2.message.DbException.convertIOException(DbException.java:330)
	at org.h2.expression.Function.getValueWithArgs(Function.java:1569)
	at org.h2.expression.Function.getValue(Function.java:576)
	at org.h2.command.dml.Update.update(Update.java:121)
	at org.h2.command.CommandContainer.update(CommandContainer.java:78)
	at org.h2.command.Command.executeUpdate(Command.java:254)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at com.intellij.database.remote.jdbc.impl.RemoteStatementImpl.execute(RemoteStatementImpl.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:323)
	at sun.rmi.transport.Transport$1.run(Transport.java:200)
	at sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$254(TCPTransport.java:683)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$2/2023395661.run(Unknown Source)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.io.FileNotFoundException: C:\Users\Jackkell\Desktop\Ball Images\Bag_Poké_Ball_Sprite (The system cannot find the file specified)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileInputStream.<init>(FileInputStream.java:93)
	at org.h2.store.fs.FilePathDisk.newInputStream(FilePathDisk.java:321)
	at org.h2.store.fs.FileUtils.newInputStream(FileUtils.java:218)
	at org.h2.expression.Function.getValueWithArgs(Function.java:1555)
	... 25 more
05-24 04:18:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: IO Exception: "java.io.FileNotFoundException: C:\Users\Jackkell\Desktop\Ball Images\Bag_Premier_Quick_Sprite.png (The system cannot find the file specified)"; "C:\Users\Jackkell\Desktop\Ball Images\Bag_Premier_Quick_Sprite.png"; SQL statement:
UPDATE BALL
SET NAME = 'Quick Ball', IMAGE = FILE_READ('C:\Users\Jackkell\Desktop\Ball Images\Bag_Premier_Quick_Sprite.png')
WHERE NAME= 'Quick' [90031-185]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:168)
	at org.h2.message.DbException.convertIOException(DbException.java:330)
	at org.h2.expression.Function.getValueWithArgs(Function.java:1569)
	at org.h2.expression.Function.getValue(Function.java:576)
	at org.h2.command.dml.Update.update(Update.java:121)
	at org.h2.command.CommandContainer.update(CommandContainer.java:78)
	at org.h2.command.Command.executeUpdate(Command.java:254)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at com.intellij.database.remote.jdbc.impl.RemoteStatementImpl.execute(RemoteStatementImpl.java:61)
	at sun.reflect.GeneratedMethodAccessor17.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:323)
	at sun.rmi.transport.Transport$1.run(Transport.java:200)
	at sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$254(TCPTransport.java:683)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$2/2023395661.run(Unknown Source)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.io.FileNotFoundException: C:\Users\Jackkell\Desktop\Ball Images\Bag_Premier_Quick_Sprite.png (The system cannot find the file specified)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileInputStream.<init>(FileInputStream.java:93)
	at org.h2.store.fs.FilePathDisk.newInputStream(FilePathDisk.java:321)
	at org.h2.store.fs.FileUtils.newInputStream(FileUtils.java:218)
	at org.h2.expression.Function.getValueWithArgs(Function.java:1555)
	... 24 more
05-24 04:18:10 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: IO Exception: "java.io.FileNotFoundException: C:\Users\Jackkell\Desktop\Ball Images\Bag_Premier_Quick_Ball_Sprite.png (The system cannot find the file specified)"; "C:\Users\Jackkell\Desktop\Ball Images\Bag_Premier_Quick_Ball_Sprite.png"; SQL statement:
UPDATE BALL
SET NAME = 'Quick Ball', IMAGE = FILE_READ('C:\Users\Jackkell\Desktop\Ball Images\Bag_Premier_Quick_Ball_Sprite.png')
WHERE NAME= 'Quick' [90031-185]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:168)
	at org.h2.message.DbException.convertIOException(DbException.java:330)
	at org.h2.expression.Function.getValueWithArgs(Function.java:1569)
	at org.h2.expression.Function.getValue(Function.java:576)
	at org.h2.command.dml.Update.update(Update.java:121)
	at org.h2.command.CommandContainer.update(CommandContainer.java:78)
	at org.h2.command.Command.executeUpdate(Command.java:254)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at com.intellij.database.remote.jdbc.impl.RemoteStatementImpl.execute(RemoteStatementImpl.java:61)
	at sun.reflect.GeneratedMethodAccessor17.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:323)
	at sun.rmi.transport.Transport$1.run(Transport.java:200)
	at sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$254(TCPTransport.java:683)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$2/2023395661.run(Unknown Source)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.io.FileNotFoundException: C:\Users\Jackkell\Desktop\Ball Images\Bag_Premier_Quick_Ball_Sprite.png (The system cannot find the file specified)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileInputStream.<init>(FileInputStream.java:93)
	at org.h2.store.fs.FilePathDisk.newInputStream(FilePathDisk.java:321)
	at org.h2.store.fs.FileUtils.newInputStream(FileUtils.java:218)
	at org.h2.expression.Function.getValueWithArgs(Function.java:1555)
	... 24 more
05-24 06:37:42 jdbc[5]: exception
org.h2.jdbc.JdbcSQLException: Constraint "UNIQUE_NAME" already exists; SQL statement:
ALTER TABLE PUBLIC.REPEL ADD CONSTRAINT unique_NAME UNIQUE (NAME) [90045-185]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.AlterTableAddConstraint.tryUpdate(AlterTableAddConstraint.java:98)
	at org.h2.command.ddl.AlterTableAddConstraint.update(AlterTableAddConstraint.java:72)
	at org.h2.command.CommandContainer.update(CommandContainer.java:78)
	at org.h2.command.Command.executeUpdate(Command.java:254)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:130)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:115)
	at com.intellij.database.remote.jdbc.impl.RemoteStatementImpl.executeUpdate(RemoteStatementImpl.java:149)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:323)
	at sun.rmi.transport.Transport$1.run(Transport.java:200)
	at sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$254(TCPTransport.java:683)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$1/923190037.run(Unknown Source)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
05-24 06:42:31 jdbc[7]: exception
org.h2.jdbc.JdbcSQLException: Constraint "UNIQUE_NAME" already exists; SQL statement:
ALTER TABLE PUBLIC.BASIC_RESTORATIVES ADD CONSTRAINT unique_NAME UNIQUE (NAME) [90045-185]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.AlterTableAddConstraint.tryUpdate(AlterTableAddConstraint.java:98)
	at org.h2.command.ddl.AlterTableAddConstraint.update(AlterTableAddConstraint.java:72)
	at org.h2.command.CommandContainer.update(CommandContainer.java:78)
	at org.h2.command.Command.executeUpdate(Command.java:254)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:130)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:115)
	at com.intellij.database.remote.jdbc.impl.RemoteStatementImpl.executeUpdate(RemoteStatementImpl.java:149)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:323)
	at sun.rmi.transport.Transport$1.run(Transport.java:200)
	at sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$254(TCPTransport.java:683)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$1/923190037.run(Unknown Source)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
05-25 00:28:55 jdbc[45]: exception
org.h2.jdbc.JdbcSQLException: Constraint "UNIQUE_NAME" already exists; SQL statement:
ALTER TABLE PUBLIC.VITAMIN ADD CONSTRAINT unique_NAME UNIQUE (NAME) [90045-185]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.AlterTableAddConstraint.tryUpdate(AlterTableAddConstraint.java:98)
	at org.h2.command.ddl.AlterTableAddConstraint.update(AlterTableAddConstraint.java:72)
	at org.h2.command.CommandContainer.update(CommandContainer.java:78)
	at org.h2.command.Command.executeUpdate(Command.java:254)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:130)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:115)
	at com.intellij.database.remote.jdbc.impl.RemoteStatementImpl.executeUpdate(RemoteStatementImpl.java:149)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:323)
	at sun.rmi.transport.Transport$1.run(Transport.java:200)
	at sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$254(TCPTransport.java:683)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$1/245019034.run(Unknown Source)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
05-25 00:44:36 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Constraint "UNIQUE_CODE" already exists; SQL statement:
ALTER TABLE PUBLIC.HM ADD CONSTRAINT unique_CODE UNIQUE (CODE) [90045-185]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.AlterTableAddConstraint.tryUpdate(AlterTableAddConstraint.java:98)
	at org.h2.command.ddl.AlterTableAddConstraint.update(AlterTableAddConstraint.java:72)
	at org.h2.command.CommandContainer.update(CommandContainer.java:78)
	at org.h2.command.Command.executeUpdate(Command.java:254)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:130)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:115)
	at com.intellij.database.remote.jdbc.impl.RemoteStatementImpl.executeUpdate(RemoteStatementImpl.java:149)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:323)
	at sun.rmi.transport.Transport$1.run(Transport.java:200)
	at sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$254(TCPTransport.java:683)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$1/29452498.run(Unknown Source)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
